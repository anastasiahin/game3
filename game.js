const SERVER_URL = "http://localhost:5000"; // –ó–∞–º—ñ–Ω–∏ –Ω–∞ —Å–≤—ñ–π —Å–µ—Ä–≤–µ—Ä

async function submitScore(name, score) {
    try {
        await fetch(`${SERVER_URL}/leaderboard`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ name, score }),
        });
        updateLeaderboard();
    } catch (error) {
        console.error("–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É:", error);
    }
}

async function updateLeaderboard() {
    try {
        const response = await fetch(`${SERVER_URL}/leaderboard`);
        const leaderboard = await response.json();
        displayLeaderboard(leaderboard);
    } catch (error) {
        console.error("–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ª—ñ–¥–µ—Ä–±–æ—Ä–¥—É:", error);
    }
}

function displayLeaderboard(leaderboard) {
    const leaderboardDiv = document.getElementById("leaderboard");
    leaderboardDiv.innerHTML = "<b>üèÜ –¢–æ–ø-10 –≥—Ä–∞–≤—Ü—ñ–≤:</b><br>";

    leaderboard.forEach((player, index) => {
        leaderboardDiv.innerHTML += `${index + 1}. ${player.name} - ${player.score}<br>`;
    });
}

// –í–∏–∫–ª–∏–∫–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ª—ñ–¥–µ—Ä–±–æ—Ä–¥—É –Ω–∞ —Å—Ç–∞—Ä—Ç—ñ
updateLeaderboard();

// –ó–º—ñ–Ω—é—î–º–æ –∫—ñ–Ω–µ—Ü—å –≥—Ä–∏, —â–æ–± –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
function endGame() {
    gameOver = true;
    gameOverScreen.style.display = "block";
    playerNameInputDiv.style.display = "block";
}

// –ü—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ Enter –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
document.addEventListener("keydown", event => {
    if (gameOver && event.code === "Enter") {
        const name = playerNameInput.value.trim() || "Anonymous";
        submitScore(name, score);
        resetGame();
    }
});

